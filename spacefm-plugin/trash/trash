#!/bin/bash
: <<COMMENT
  Copyright (C) 2012 Tri Le <trile7 at gmail dot com>

  This program is free software: you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation, either version 3 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program.  If not, see <http://www.gnu.org/licenses/>.
COMMENT

$fm_import
if [[ -z $fm_pwd ]]; then
  echo "This script is intended to be run with spacefm only."
  exit 1
fi
mkdir -p "$fm_cmd_data"
trashrc="$fm_cmd_data"/trashrc
trashcan="$HOME/.local/share/Trash"
if [[ ! -f "$trashrc" ]]; then
  echo "#Maximum file size that can be moved to trash in byte.  Leave blank to ignore file size" >> "$trashrc"
  echo maxsize=1000000000 >> "$trashrc"
fi
source "$trashrc"
mkdir -p "$trashcan/files" "$trashcan/info"
if [[ $? -ne 0 ]]; then
  echo "Cannot create trashcan"
  echo "Please edit trashcan path in $trashrc file"
  exit 1
fi
if echo $fm_pwd | egrep -q ^$trashcan; then
  echo "Cannot trash files in trashcan"
  exit
fi
if [[ -z $fm_file ]]; then
  echo "Trash preference is located at $trashrc.  Edit this file to change maximum file size that can be moved to trash."
  echo
  echo "When a file is trashed using this script, it's moved to $trashcan/files folder and a file with the same filename plus the extension .trashinfo containing the filepath and deletion date is created in the $trashcan/info folder."
  echo
  echo "When trash or restore a file, if the destination already have the same filename, _1 is added to the new filename."
  exit
fi
for i in "${fm_files[@]}"; do
  if [[ $maxsize ]] && [[ `du -bs "$i" | awk '{print $1}'` -gt $maxsize ]]; then
    echo "Skip $i because it's larger than $maxsize"
    continue
  fi
  filename=`basename "$i"`
  while [[ -e "$trashcan/files/$filename" ]]; do
    (( j++ ))
    filename="$filename"_1
    if [[ $j -gt 100 ]]; then
      echo "Cannot trash $i due to conflict in $trashcan"
      break
    fi
  done
  [[ -e "$trashcan/files/$filename" ]] && continue
  mv -n "$i" "$trashcan/files/$filename" && echo -e "[Trash Info]\nPath=$i\nDeletionDate=`date`" > "$trashcan/info/$filename.trashinfo"
done
exit $?
