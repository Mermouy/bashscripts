#!/bin/bash
: <<COMMENT
  Copyright (C) 2012 Tri Le <trile7 at gmail dot com>

  This program is free software: you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation, either version 3 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program.  If not, see <http://www.gnu.org/licenses/>.
COMMENT

function sync() {
  for i in "${sync_folders[@]}"; do
    backup=$i-backup
    tmp=$tmpfs/${i//\//_}
    if [[ `readlink "$i"` = "$tmp" ]]; then
      [[ -d $i ]] && rsync -a --delete "$tmp/" "$backup/" ||  rsync "$tmp" "$backup"
      [[ $? -eq 0 ]] && echo "$i synced"
    else
      echo -e "${red}Sync failed...$i is not in tmpfs $none"
    fi
  done
  }

function stopsync(){
  sync
  echo "Stoping tmpfs-sync ...."
  for i in "${sync_folders[@]}"; do
    backup=$i-backup
    tmp=$tmpfs/${i//\//_}
    if [[ `readlink "$i"` = "$tmp" ]]; then
      rm -rf "$i"
      [[ -e $backup ]] && mv "$backup" "$i"
      [[ -e $tmp ]] && rm -rf "$tmp"
      echo "$i stopped"
    fi
  done
  }

function startsync(){
  echo "Starting tmpfs-sync ...."
  for i in "${sync_folders[@]}"; do
    backup=$i-backup
    tmp=$tmpfs/${i//\//_}
    [[ `readlink "$i"` = "$tmp" ]] && continue
    [[ -h $i ]] && rm -f "$i"
    [[ -e $backup ]] && mv "$backup" "$i"
    cp -a "$i" "$tmp" && mv "$i" "$backup" && ln -s "$tmp" "$i" && echo "$i started"
  done
  }

function usage {
  echo -e "${bold}Usage: $0 [--config config_file_path] readme|start|sync|stop $none"
  exit 1
  }

red='\e[0;31m'; bold='\e[1m'; none='\e[0m'

if [[ $1 = --config ]]; then
  config=$2
  shift 2
elif [[ $1 = readme ]]; then
  cat "$0.readme"
  exit 0
fi
if ! source ${config:=$0.cfg}; then
  echo -e "${red}Problem sourcing config file.  Please refer to readme to create config file $none"
  usage
fi
if ! mount | grep -q "$tmpfs type tmpfs"; then
  echo -e "$red$tmpfs is not mounted as tmpfs $none"
  exit 1
fi

case "$1" in
  start) startsync  ;;
  stop) stopsync ;;
  sync) sync ;;
  *) usage ;;
esac
