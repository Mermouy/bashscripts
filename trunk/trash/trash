#!/bin/bash
: <<COMMENT
  Copyright (C) 2012 Tri Le <trile7 at gmail dot com>

  This program is free software: you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation, either version 3 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program.  If not, see <http://www.gnu.org/licenses/>.
COMMENT

version="trash v0.2.1"

function info {
  if [[ $PWD != $trashcan/files ]]; then
    echo "You must be in trashcan to display trashed file info."
    echo "cd $trashcan/files"
    return 1
  fi
  for i; do
    trashinfo=$trashcan/info/${i##*/}.trashinfo
    [[ -f $trashinfo ]] || continue
    cat "$trashinfo"
    echo "---------"
  done
  }

function restore {
  for i; do
    infofile="$trashcan"/info/`basename "$i"`.trashinfo
    Path=`cat "$infofile" | grep -m1 Path= | cut -d'=' -f2`
    if [[ -z $Path ]]; then
      echo "Cannot restore $i due to missing filepath"
      continue
    fi
    targetfolder=`dirname "$Path"`
    j=0
    while [[ -e $Path ]]; do
      Path=${Path%_*}_$((j++))
      if [[ $j -gt 99 ]]; then
        echo "cannot restore $i due to too many conflicts in $targetfolder"
        break
      fi
    done
    [[ -e $Path ]] && continue
    mkdir -p "$targetfolder" && mv -n "$i" "$Path" && rm "$infofile"
  done
  }

function move {
  for i; do
    if echo $i | grep -q "^$trashcan"; then
      echo "cannot trash $i because it's already in the trashcan"
      continue
    fi
    if [[ $i != /* ]]; then
      echo "full filepath is needed for $i"
      continue
    fi
    if [[ $maxsize ]] && [[ `du -bs "$i" | awk '{print $1}'` -gt $maxsize ]]; then
      echo "skip $i because it's larger than $maxsize"
      continue
    fi
    filename=`basename "$i"`
    j=0
    while [[ -e $trashcan/files/$filename ]]; do
      filename=${filename%_*}_$((j++))
      if [[ $j -gt 99 ]]; then
        echo "cannot trash $i due to conflict in $trashcan"
        break
      fi
    done
    [[ -e $trashcan/files/$filename ]] && continue
    mv "$i" "$trashcan/files/$filename" && echo -e "[$filename trash info]\nPath=$i\nDeletionDate=`date`" > "$trashcan/info/$filename.trashinfo"
  done
  }

function usage {
  echo "$version"
  echo "$0 [--config cfg] files            #move file to trashcan"
  echo "$0 [--config cfg] --restore files  #restore item to its orginal location"
  echo "$0 [--config cfg] --empty          #remove all items in trashcan"
  echo "$0 [--config cfg] --info files     #show trash file info"
  echo
  echo "trashcan is $trashcan/files and max file size to trash is $maxsize"
  }

if [[ $1 = --config ]]; then
  cfg=$2; shift 2
fi
[[ -f ${cfg:=$HOME/.trashrc} ]] && source "$cfg"
maxsize=${maxsize:=1000000000}
trashcan=${trashcan:=$HOME/.local/share/Trash}
if ! mkdir -p "$trashcan/files" "$trashcan/info"; then
  echo "cannot create trashcan"; exit 1
fi
case $1 in
  --help|-h) usage ;;
  --info) shift; info "$@" ;;
  --empty) rm -rf "$trashcan"/files/*; rm -rf "$trashcan"/info/* ;;
  --restore) shift; restore "$@" ;;
  *) move "$@" ;;
esac
